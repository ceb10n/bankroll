@model bankroll.Models.NewEntry

<style>
    .panel-default {
        opacity: 0.9;
        margin-top: 100px;
    }

    .form-group.last {
        margin-bottom: 0px;
    }
</style>



<div class="container">
    <div class="row">
        <div class="col-md-4 col-md-offset-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <span class="glyphicon glyphicon-usd"></span> Add new entry
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm("Add", "Entry", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-group">
                                <label class="col-xs-3 control-label">
                                    Buy In
                                </label>
                                <div class="col-xs-9">
                                    @Html.TextBoxFor(x => x.BuyIn, new { @class = "form-control", placeholder = "Buy In", id = "BuyIn" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-xs-3 control-label">
                                    Cash Out
                                </label>
                                <div class="col-xs-9">
                                    @Html.TextBoxFor(x => x.CashOut, new { @class = "form-control", placeholder = "Cash Out", id = "CashOut" })
                                </div>
                            </div>

                            <div class="collapse" id="moreInformation">
                                <div class="form-group">
                                    <label class="col-xs-3 control-label">
                                        Date
                                    </label>
                                    <div class="col-xs-9">
                                        @Html.TextBoxFor(x => x.Date, new { @class = "form-control", id = "Date" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-xs-3 control-label">
                                        Online?
                                    </label>
                                    <div class="col-xs-9">
                                        @Html.CheckBoxFor(x => x.Online, new { id = "Online" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-xs-3 control-label">
                                        Place
                                    </label>
                                    <div class="col-xs-9">
                                        @Html.DropDownListFor(x => x.PokerPlaceId, new List<SelectListItem>(), "", new { @class = "form-control", id = "PokerPlace" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-xs-3 control-label">
                                        Tournament
                                    </label>
                                    <div class="col-xs-9">
                                        @Html.DropDownListFor(x => x.TournamentId, new List<SelectListItem>(), "", new { @class = "form-control", id = "Tournament" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group last">
                                <div class="col-sm-offset-3 col-sm-9">
                                    <button type="submit" class="btn btn-success btn-sm" id="save">
                                        Save
                                    </button>
                                    <button class="btn btn-default btn-sm" type="button" data-toggle="collapse" data-target="#moreInformation" aria-expanded="false" aria-controls="moreInformation">
                                        Add More Information
                                    </button>
                                </div>
                            </div>
                        }
                </div>
                
            </div>
        </div>
    </div>
</div>

@section scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            applyMasks();
            loadPokerPlaceSelect();

            $("#Online").change(function () {
                onOnlineChanged();
            });

            $("#PokerPlace").change(function () {
                onPokerPlaceChanged();
            });
        });

        function applyMasks() {
            $("#Date").datepicker();
            $("#BuyIn").maskMoney({ thousands: '.', decimal: ','});
            $("#CashOut").maskMoney({ thousands: '.', decimal: ',' });
        }

        function loadPokerPlaceSelect() {
            $.ajax({
                url: "@Url.Action("PokerClubs", "PokerClub")",
                type: "GET",
                error: function (e) {
                    alert("An error occurred. " + e.toString());
                },
                success: function (data) {
                    $("#PokerPlace").html('');
                    $("#PokerPlace").append('<option value=""></option>');

                    $.each($.parseJSON(data), function (index, value) {
                        $("#PokerPlace").append('<option value="' + value.Id + '">' + value.Name + '</option>');
                    });
                }
            });
        }

        function onOnlineChanged() {
            if ($("#Online").is(':checked')) {
                $.ajax({
                    url: "@Url.Action("PokerSites", "PokerSite")",
                    type: "GET",
                    error: function (e) {
                        alert("An error occurred. " + e.toString());
                    },
                    success: function (data) {
                        $("#PokerPlace").html('');
                        $("#PokerPlace").append('<option value=""></option>');

                        $.each($.parseJSON(data), function (index, value) {
                            $("#PokerPlace").append('<option value="' + value.Id + '">' + value.Name + '</option>');
                        });
                    }
                });
            } else {
                $.ajax({
                    url: "@Url.Action("PokerClubs", "PokerClub")",
                    type: "GET",
                    error: function (e) {
                        alert("An error occurred. " + e.toString());
                    },
                    success: function (data) {
                        $("#PokerPlace").html('');
                        $("#PokerPlace").append('<option value=""></option>');

                        $.each($.parseJSON(data), function (index, value) {
                            $("#PokerPlace").append('<option value="' + value.Id + '">' + value.Name + '</option>');
                        });
                    }
                });
            }
        }

        function onPokerPlaceChanged() {
            if ($("#PokerPlace").val() != '') {
                if ($("#Online").is(':checked')) {
                    $.ajax({
                        url: "@Url.Action("TournamentsFromSite", "PokerSite")",
                        type: "GET",
                        data: { id: $("#PokerPlace").val() },
                        error: function (e) {
                            alert("An error occurred. " + e.toString());
                        },
                        success: function (data) {
                            $("#Tournament").html('');
                            $("#Tournament").append('<option value=""></option>');

                            $.each($.parseJSON(data), function (index, value) {
                                $("#Tournament").append('<option value="' + value.Id + '">' + value.Name + '</option>');
                            });
                        }
                    });
                } else {
                    $.ajax({
                        url: "@Url.Action("TournamentsFromClub", "PokerClub")",
                        type: "GET",
                        data: { id: $("#PokerPlace").val() },
                        error: function (e) {
                            alert("An error occurred. " + e.toString());
                        },
                        success: function (data) {
                            $("#Tournament").html('');
                            $("#Tournament").append('<option value=""></option>');

                            $.each($.parseJSON(data), function (index, value) {
                                $("#Tournament").append('<option value="' + value.Id + '">' + value.Name + '</option>');
                            });
                        }
                    });
                }
            }
        }
    </script>
}




